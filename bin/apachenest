#!/usr/bin/env bash
set -e

INSTALL_DIR="$HOME/Documents/.apachenest"
WWW_DIR="$INSTALL_DIR/www"
CONF_DIR="$INSTALL_DIR/conf"

# Colors and emojis
GREEN="\033[0;32m"
BLUE="\033[0;34m"
YELLOW="\033[1;33m"
NC="\033[0m"
CHECK="✔️"
ERROR="❌"
ROCKET="🚀"
GEAR="⚙️"
DOWNLOAD="📥"
HOURGLASS="⏳"
SUCCESS="🎉"

# Loading spinner function
spinner() {
	local pid=$!
	local delay=0.15
	local spinstr='|/-\'
	while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do
		local temp=${spinstr#?}
		printf " [%c]  " "$spinstr"
		local spinstr=$temp${spinstr%"$temp"}
		sleep $delay
		printf "\b\b\b\b\b\b"
	done
	printf "    \b\b\b\b"
}

configure_env() {
	echo -e "\n${GEAR} ${YELLOW}Configuring environment...${NC}"
	export NP_LOCATION="$INSTALL_DIR"
	export PATH="$PATH:$INSTALL_DIR/bin"
	export NP_GIT="$(which git)"
	echo -e "${CHECK} ${GREEN}Environment configured!${NC}"
}

remove_lock() {
	if [[ -d $INSTALL_DIR/.nix-portable/nix/var/nix/db/db.sqlite.lock ]]; then
		rm -rf $INSTALL_DIR/.nix-portable/nix/var/nix/db/db.sqlite.lock
	fi
}


setup_nix_portable() {
	echo -e "\n${BLUE}${ROCKET} Installing Nix-Portable ${ROCKET}${NC}"
	echo -e "${GEAR} ${YELLOW}Creating directory structure...${NC}"
	mkdir -p "$INSTALL_DIR/bin"
	[[ -d "$WWW_DIR" ]] || mkdir -p "$WWW_DIR"
	[[ -d "$CONF_DIR" ]] || mkdir -p "$CONF_DIR"
	[[ -d "$INSTALL_DIR/apache" ]] || mkdir -p "$INSTALL_DIR/apache"
	[[ -d "$INSTALL_DIR/apache/logs" ]] || mkdir -p "$INSTALL_DIR/apache/logs"
	echo -e "${CHECK} ${GREEN}Directories created!${NC}"

	echo -e "\n${DOWNLOAD} ${YELLOW}Downloading nix-portable...${NC}"
	curl -L https://github.com/DavHau/nix-portable/releases/latest/download/nix-portable-$(uname -m) > $INSTALL_DIR/bin/nix-portable
	chmod +x "$INSTALL_DIR/bin/nix-portable"
	echo -e "${CHECK} ${GREEN}Download complete!${NC}"

	echo -e "\n${HOURGLASS} ${YELLOW}Verifying installation...${NC}"
	nix-portable nix-shell --version
	echo -e "${CHECK} ${GREEN}Verification complete!${NC}"
	echo -e "\n${SUCCESS} ${GREEN}Installation complete!${NC}"
}

install_apache_php() {
  if [[ ! -f $CONF_DIR/php-version.conf ]]; then
    echo "php82" > $CONF_DIR/php-version.conf
  fi

  PHP_VERSION=$(<$CONF_DIR/php-version.conf)

  echo -e "${GEAR} Checking Apache and ${PHP_VERSION}..."
  nix-portable nix-shell -p apacheHttpd "$PHP_VERSION" --run "httpd -v && php -v"
}


setup_configs() {
	APACHE_PATH=$(nix-portable nix-shell -p apacheHttpd --run "echo \$(dirname \$(dirname \$(which httpd)))")
	echo -e "\n${GEAR} ${YELLOW}Setting up ApacheNest configs...${NC}"
	
	if [[ ! -f "$CONF_DIR/php-fpm.conf" ]]; then
	cat > "$CONF_DIR/php-fpm.conf" <<EOF
[global]
error_log = $INSTALL_DIR/php-fpm.log

[www]
listen = 127.0.0.1:9000
listen.allowed_clients = 127.0.0.1
pm = dynamic
pm.max_children = 5
pm.start_servers = 2
pm.min_spare_servers = 1
pm.max_spare_servers = 3
chdir = /
EOF
	fi

	if [[ ! -f "$CONF_DIR/httpd.conf" ]]; then
	cat > "$CONF_DIR/httpd.conf" <<EOF
ServerName 127.0.0.1
ServerRoot "$INSTALL_DIR/apache"
Listen 8080
LoadModule mpm_event_module $APACHE_PATH/modules/mod_mpm_event.so
LoadModule proxy_module $APACHE_PATH/modules/mod_proxy.so
LoadModule proxy_fcgi_module $APACHE_PATH/modules/mod_proxy_fcgi.so
LoadModule dir_module $APACHE_PATH/modules/mod_dir.so
LoadModule mime_module $APACHE_PATH/modules/mod_mime.so
LoadModule authz_core_module $APACHE_PATH/modules/mod_authz_core.so
LoadModule unixd_module $APACHE_PATH/modules/mod_unixd.so

DocumentRoot "$WWW_DIR"
<Directory "$WWW_DIR">
		Require all granted
</Directory>

DirectoryIndex index.php index.html

<FilesMatch \.php$>
		SetHandler "proxy:fcgi://127.0.0.1:9000"
</FilesMatch>

TypesConfig $APACHE_PATH/conf/mime.types
EOF
	fi

	echo -e "${CHECK} ${GREEN}ApacheNest config ready!${NC}"
}

select_php() {
	stop_php
  local CURRENT_VERSION=$PHP_VERSION
  [[ -f php-version.conf ]] && CURRENT_VERSION=$(<php-version.conf)

  local PHP_VERSIONS
  PHP_VERSIONS=$(
    nix-portable nix search nixpkgs "php-with-extensions" --exclude "apacheHttpdPackages" --json \
      | jq -r 'keys[] | select(test("php8[1-4]$")) | sub(".*\\."; "")'
  )

  local SORTED_VERSIONS
  SORTED_VERSIONS=$(
    printf "%s\n" $CURRENT_VERSION $PHP_VERSIONS \
      | awk '!seen[$0]++'
  )

  local SELECTED_VERSION
  SELECTED_VERSION=$(printf "%s\n" $SORTED_VERSIONS | fzf --height=10% --border --highlight-line --padding=0,30% --header-lines=1 --prompt="Select PHP version: ")

  echo "$SELECTED_VERSION" > $CONF_DIR/php-version.conf
}


start_apache(){
	nix-portable nix-shell -p apacheHttpd --run "
		httpd -f $CONF_DIR/httpd.conf &
	" 
}

start_php(){
	nix-portable nix-shell -p $PHP_VERSION  --run "
		php-fpm -y $CONF_DIR/php-fpm.conf &
	" 
}

stop_apache(){
	pkill -f "$CONF_DIR/httpd.conf"
}

stop_php(){
	pkill -f "$CONF_DIR/php-fpm.conf"
}

restart_apache(){
	stop_apache && sleep 1
	start_apache
}

restart_php(){
	stop_php && sleep 1
	start_php
}

apache_menu(){
	local ACTIONS
	local SELECTED_ACTION
	
	while true; do
		ACTIONS=($(if ! pgrep -af "$CONF_DIR/httpd.conf" > /dev/null; then 
			echo Start
		else
			echo Stop
		fi) "Restart" "Refresh" "Back")
		
		SELECTED_ACTION=$(printf "%s\n" "${ACTIONS[@]}" | fzf --border --highlight-line --height=10% --layout=reverse)
		[[ -z $SELECTED_ACTION ]] && break
		case $SELECTED_ACTION in
			"Start")
			 	start_apache & spinner ;;
			"Stop")
			 	stop_apache & spinner ;;
			"Restart")
				restart_apache & spinner ;;
			"Back")
				break ;;
		esac
	done
	
}

php_menu(){
	local ACTIONS
	local SELECTED_ACTION
	
	while true; do
		ACTIONS=($(if ! pgrep -af "$CONF_DIR/php-fpm.conf" > /dev/null; then 
			echo Start
		else
			echo Stop
		fi) "Restart" "Refresh" "Back")
		
		SELECTED_ACTION=$(printf "%s\n" "${ACTIONS[@]}" | fzf --border --highlight-line --height=10% --layout=reverse)
		[[ -z $SELECTED_ACTION ]] && break
		case $SELECTED_ACTION in
			"Start")
			 	start_php & spinner ;;
			"Stop")
			 	stop_php & spinner ;;
			"Restart")
				restart_php & spinner ;;
			"Back")
				break ;;
		esac
	done
	
}

main_menu(){
	local ACTIONS
	local SELECTED_ACTION
	ACTIONS=("All" "Apache" "PHP" "Refresh" "Settings" "Exit")
	while true; do
		SELECTED_ACTION=$(printf "%s\n" "${ACTIONS[@]}" | fzf --border --highlight-line --height=10% --layout=reverse \
		--preview-window=80%:wrap --preview='
		SELECTED={}
		if [[ $SELECTED == "Apache" ]]; then
			echo "Status: '$(if ! pgrep -af "$CONF_DIR/httpd.conf" > /dev/null; then 
				echo 🟥Inactive 
			else
				echo 🟩Active 
			fi)'"
		  nix-portable nix-shell -p apacheHttpd --run "httpd -v"
		  echo -e "\n===Logs===\n"
		  [[ -f '$INSTALL_DIR'/apache/logs/error_log ]] && cat '$INSTALL_DIR'/apache/logs/error_log
		fi
		if [[ $SELECTED == "PHP" ]]; then
			echo "Status: '$(if ! pgrep -af "$CONF_DIR/php-fpm.conf" > /dev/null; then 
				echo 🟥Inactive 
			else
				echo 🟩Active 
			fi)'"
		  nix-portable nix-shell -p '$PHP_VERSION' --run "php -v"
		  echo -e "\n===Logs===\n"
		  [[ -f '$INSTALL_DIR'/php-fpm.log ]] && cat '$INSTALL_DIR'/php-fpm.log
		fi
		')
		[[ -z $SELECTED_ACTION ]] && break
		case $SELECTED_ACTION in
			"Apache")
			 	apache_menu ;;
			"PHP")
			 	php_menu ;;
			"Settings")
				echo Settings ;;
			"Exit")
				break ;;
		esac
	done
}

remove_lock
configure_env
[[ ! -f "$INSTALL_DIR/bin/nix-portable" ]] && setup_nix_portable
install_apache_php
setup_configs
main_menu
